"""empty message

Revision ID: b5c66954fd5b
Revises: 
Create Date: 2020-10-28 18:45:41.572501

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b5c66954fd5b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('email',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_email')),
    sa.UniqueConstraint('email', name=op.f('uq_email_email'))
    )
    op.create_table('phone',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('phone', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_phone')),
    sa.UniqueConstraint('phone', name=op.f('uq_phone_phone'))
    )
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tag', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tag'))
    )
    op.create_table('task_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task_status'))
    )
    op.create_table('user_role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_role'))
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('password', sa.String(length=128), nullable=True),
    sa.Column('public_bio', sa.String(), nullable=True),
    sa.Column('role', sa.Integer(), nullable=True),
    sa.Column('email', sa.Integer(), nullable=True),
    sa.Column('phone', sa.Integer(), nullable=True),
    sa.Column('tag', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['email'], ['email.id'], name=op.f('fk_user_email_email'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['phone'], ['phone.id'], name=op.f('fk_user_phone_phone'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role'], ['user_role.id'], name=op.f('fk_user_role_user_role'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag'], ['tag.id'], name=op.f('fk_user_tag_tag'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user'))
    )
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('deadline', sa.Date(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('customer', sa.Integer(), nullable=True),
    sa.Column('freelancer', sa.Integer(), nullable=True),
    sa.Column('tag', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['customer'], ['user.id'], name=op.f('fk_task_customer_user'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['freelancer'], ['user.id'], name=op.f('fk_task_freelancer_user'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['status'], ['task_status.id'], name=op.f('fk_task_status_task_status'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag'], ['tag.id'], name=op.f('fk_task_tag_tag'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task'))
    )
    op.create_table('freelancers_who_responded',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], name=op.f('fk_freelancers_who_responded_task_id_task')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_freelancers_who_responded_user_id_user'))
    )
    op.create_table('task_comment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(), nullable=True),
    sa.Column('task', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['task'], ['task.id'], name=op.f('fk_task_comment_task_task')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task_comment'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task_comment')
    op.drop_table('freelancers_who_responded')
    op.drop_table('task')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_table('user')
    op.drop_table('user_role')
    op.drop_table('task_status')
    op.drop_table('tag')
    op.drop_table('phone')
    op.drop_table('email')
    # ### end Alembic commands ###
