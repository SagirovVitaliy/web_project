from flask import Blueprint, render_template, flash, redirect, url_for, request
from webapp.sign.forms import LoginForm, RegistrationForm
from webapp.db import db, User, UserRole
from flask_login import login_user, logout_user, current_user
from webapp.db import (CUSTOMER, FREELANCER)

blueprint = Blueprint('sign', __name__)


@blueprint.route('/sign_up', methods=['GET', 'POST'])
def sign_up():
    title = '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
    form = RegistrationForm()
    form.role.choices = [(role.id, role.role) for role in UserRole.query.all()]

    if request.method == 'POST':
        if form.validate_on_submit():
            user_name = form.user_name.data
            if User.query.filter(User.user_name == user_name).count():
                flash('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
            
            password1 = form.password1.data
            password2 = form.password2.data

            if not password1 == password2:
                flash('–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç')

            user = User(
                user_name=user_name,
                public_bio=form.public_bio.data,
                role=form.role.data,
                email=form.email.data,
                phone=form.phone.data,
            )
            user.set_password(password1)

            db.session.add(user)
            db.session.commit()
            flash('–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!')
            return redirect(url_for('sign.sign_in'))

    return render_template('sign/sign_up.html', title=title, form=form)


@blueprint.route('/sign_in', methods=['GET', 'POST'])
def sign_in():
    if current_user.is_authenticated:
        flash('–í—ã —É–∂–µ –≤–æ—à–ª–∏')
        user = User.query.get(current_user.get_id())
        if user.role == CUSTOMER:
            return redirect(url_for('customer.view_created_tasks', user_id=user.id))
        elif user.role == FREELANCER:
            return redirect(url_for('freelancer.view_tasks_for_fl', user_id=user.id))

    title = '–í—Ö–æ–¥'
    form = LoginForm()

    if request.method == 'POST':
        if form.validate_on_submit():
            user = User.query.filter(User.user_name == form.user_name.data).first()
            if user and user.check_password(form.password.data):
                login_user(user, remember=form.remember_me.data)
                flash('–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—à–ª–∏ –Ω–∞ —Å–∞–π—Ç')
                user_id = user.id
                if user.role == CUSTOMER:
                    return redirect(url_for('customer.view_created_tasks', user_id=user_id))
                elif user.role == FREELANCER:
                    return redirect(url_for('freelancer.view_tasks_for_fl', user_id=user_id))
                else:
                    flash('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è –∏–ª–∏ –ø–∞—Ä–æ–ª—å')
                    return render_template('sign/sign_in.html', title=title, form=form)

    return render_template('sign/sign_in.html', title=title, form=form)


@blueprint.route('/sign_out')
def sign_out():
    logout_user()
    flash('–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—à–ª–∏')
    return redirect(url_for('sign.index'))


@blueprint.route('/', methods=['GET', 'POST'])
def index():
    title = '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞'
    demo_links = [
        {
            'url': url_for('sign.sign_up'),
            'label': '„Ä∞üò∂ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è.',
        },
        {
            'url': url_for('sign.sign_in'),
            'label': '„Ä∞üò∂ –í–æ–π—Ç–∏.',
        },
        {
            'url': url_for('sign.sign_out'),
            'label': '„Ä∞üò∂ –í—ã–π—Ç–∏.',
        },
        {
            'url': url_for('task.view_task', task_id=2),
            'label': '„Ä∞üò∂ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ó–∞–¥–∞—á—É –Ω–æ–º–µ—Ä 2.',
        },
        {
            'url': url_for('task.view_task', task_id=3),
            'label': '„Ä∞üò∂ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ó–∞–¥–∞—á—É –Ω–æ–º–µ—Ä 3.',
        },
        {
            'url': url_for('task.dismiss_responded_freelancer_from_task', task_id=3),
            'label': '‚ûñüíÄ –û—Ç—Ü–µ–ø–∏—Ç—å –æ—Ç –ó–∞–¥–∞—á–∏ –Ω–æ–º–µ—Ä 3, –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –û—Ç–∫–ª–∏–∫–Ω—É–≤—à–µ–≥–æ—Å—è –§—Ä–∏–ª–∞–Ω—Å–µ—Ä–∞ –Ω–æ–º–µ—Ä...',
        },
        {
            'url': url_for('task.view_task', task_id=4),
            'label': '„Ä∞üò∂ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ó–∞–¥–∞—á—É –Ω–æ–º–µ—Ä 4.',
        },
        {
            'url': url_for('task.move_task_to_in_work', task_id=4),
            'label': '‚ûïüòÅ –î–≤–∏–Ω—É—Ç—å –ó–∞–¥–∞—á—É –Ω–æ–º–µ—Ä 4 –≤ —Å—Ç–∞—Ç—É—Å in_work.',
        },
        {
            'url': url_for('task.move_task_to_in_review', task_id=4),
            'label': '‚ûïüòÅ –î–≤–∏–Ω—É—Ç—å –ó–∞–¥–∞—á—É –Ω–æ–º–µ—Ä 4 –≤ —Å—Ç–∞—Ç—É—Å in_review.',
        },
        {
            'url': url_for('task.move_task_to_done', task_id=4),
            'label': '‚ûïüòÅ –î–≤–∏–Ω—É—Ç—å –ó–∞–¥–∞—á—É –Ω–æ–º–µ—Ä 4 –≤ —Å—Ç–∞—Ç—É—Å done.',
        },
        {
            'url': url_for('task.cancel_task', task_id=4),
            'label': '‚ûñüíÄ –û—Ç–º–µ–Ω–∏—Ç—å –ó–∞–¥–∞—á—É –Ω–æ–º–µ—Ä 4.',
        },
        {
            'url': url_for('task.dismiss_confirmed_freelancer_from_task', task_id=4),
            'label': '‚ûñüíÄ –û—Ç—Ü–µ–ø–∏—Ç—å –æ—Ç –ó–∞–¥–∞—á–∏ –Ω–æ–º–µ—Ä 4, –§—Ä–∏–ª–∞–Ω—Å–µ—Ä–∞-–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –Ω–æ–º–µ—Ä...',
        },
        {
            'url': url_for('task.view_task', task_id=5),
            'label': '„Ä∞üò∂ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ó–∞–¥–∞—á—É –Ω–æ–º–µ—Ä 5.',
        },
        {
            'url': url_for('task.move_task_to_in_work', task_id=5),
            'label': '‚ûïüòÅ –î–≤–∏–Ω—É—Ç—å –ó–∞–¥–∞—á—É –Ω–æ–º–µ—Ä 5 –≤ —Å—Ç–∞—Ç—É—Å in_work.',
        },
        {
            'url': url_for('task.move_task_to_in_review', task_id=5),
            'label': '‚ûïüòÅ –î–≤–∏–Ω—É—Ç—å –ó–∞–¥–∞—á—É –Ω–æ–º–µ—Ä 5 –≤ —Å—Ç–∞—Ç—É—Å in_review.',
        },
        {
            'url': url_for('task.move_task_to_done', task_id=5),
            'label': '‚ûïüòÅ –î–≤–∏–Ω—É—Ç—å –ó–∞–¥–∞—á—É –Ω–æ–º–µ—Ä 5 –≤ —Å—Ç–∞—Ç—É—Å done.',
        },
        {
            'url': url_for('task.cancel_task', task_id=5),
            'label': '‚ûñüíÄ –û—Ç–º–µ–Ω–∏—Ç—å –ó–∞–¥–∞—á—É –Ω–æ–º–µ—Ä 5.',
        },
        {
            'url': url_for('task.dismiss_confirmed_freelancer_from_task', task_id=5),
            'label': '‚ûñüíÄ –û—Ç—Ü–µ–ø–∏—Ç—å –æ—Ç –ó–∞–¥–∞—á–∏ –Ω–æ–º–µ—Ä 5, –§—Ä–∏–ª–∞–Ω—Å–µ—Ä–∞-–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –Ω–æ–º–µ—Ä...',
        },
    ]

    return render_template(
        'sign/index.html',
        title=title,
        demo_links=demo_links
        )